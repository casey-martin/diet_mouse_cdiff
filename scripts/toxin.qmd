---
title: "toxin"
format: html
editor: visual
---

```{r}
# change to scripts directory if not there already
# curr_dir <- getwd()
# curr_dir <- str_split(curr_dir, '\\/')
# if (curr_dir[length(curr_dir)] != 'scripts'){
#   setwd('./scripts')
# }
```

```{r, include=FALSE}
library(broom)
library(cowplot)
library(magrittr)
library(qiime2R)
library(tidyverse)
```

```{r}
## general function to prep the metadata file for further data analyses 
metadata_fixer <- function(metadata_fp) {
  tmpMeta <- read_tsv(metadata_fp, n_max = 2)
  mycols <- colnames(tmpMeta)
  metadata <- read_tsv(metadata_fp, skip = 2, col_names = mycols)
  names(metadata)[names(metadata) == '#SampleID'] <- 'sampleid'
  metadata %>% 
    filter(!is.na(diet)) %>% 
    mutate(day_post_inf = if_else(day_post_inf == 2, 3, day_post_inf)) %>% 
    mutate(diet = as.factor(diet)) -> metadata
  return(metadata)
}

## for editing my metadata file post metadata fixer 
meta_diet_fixer <- function(metadata_file,
                            seq_depth_fp){
  seq_depths <- read_tsv(seq_depth_fp)
  metadata_file %>% 
    select(sampleid, diet, day_post_inf, mouse_id, study) %>% 
    mutate(diet_true = diet,
    diet_true = if_else(day_post_inf == -15, "Chow", diet_true),
    high_fat = case_when(
      diet_true == 'HF/HF' ~ 1,
      diet_true == 'HF/LF' ~ 1,
      .default = 0
      ), 
      high_fiber = case_when(
      diet_true == 'HF/HF' ~ 1,
      diet_true == 'LF/HF' ~ 1,
      diet_true == 'Chow' ~ 1,
      .default = 0
      ), 
      purified_diet = case_when(
      diet_true == 'Chow' ~ 0,
      .default = 1
      )
    ) %>% 
    left_join(seq_depths) -> metadata
  return(metadata)
}
```

**File Paths**

```{r}
metadata_FP <- '../data/misc/merged_metadata1.tsv'
toxin_FP <- '../data/misc/toxin_final_data.tsv'
seq_depth_FP <- '../data/misc/tss_seq_depth.tsv'
```

**File Processing**

Do I need to filter for mice that are from day_post_inf 3 like I did for the histopathology since I will be comparing it to the histopathology results??

```{r}
## toxin data 
toxin <- read_tsv(toxin_FP)
wanted_ids <- toxin$mouse_id

## metadata 
metadata <- metadata_fixer(metadata_FP)
metadata <- meta_diet_fixer(metadata,
                            seq_depth_FP)

metadata %>% 
  group_by(mouse_id) %>% 
  filter(mouse_id %in% wanted_ids) -> meta_filt

metadata %>% 
  left_join(toxin, by = 'mouse_id') %>% 
  # filter(day_post_inf == 3) %>% 
  gather('Total TcA Neat', 'Total TcB Neat', 
         key = neat_toxin, value = neat_conc) %>% 
  gather('Total TcA 1:10', 'Total TcB 1:10',
         key = dil_toxin, value = dil_conc) %>% 
  filter(neat_conc != 'BDL',
         !is.na(neat_conc)) %>% 
  filter(dil_conc != 'BDL',
         !is.na(dil_conc)) %>% 
  mutate(neat_conc = as.numeric(neat_conc),
         dil_conc = as.numeric(dil_conc)) -> big_toxin

## attempting to remove duplicated points due to repeating mouse_ids 
## from my subsequent plots 
big_toxin %>% 
  select(-Extra_Sample) %>% 
  distinct(mouse_id, dil_conc, .keep_all = TRUE) -> dil_toxin

dil_toxin[is.na(dil_toxin)] <- 0

big_toxin %>% 
  distinct(mouse_id, neat_conc, .keep_all = TRUE) -> neat_toxin 
```

**Toxin Plot Construction**

TcA and TcB concentrations by diet without any kind of dilution factor.

```{r}
neat_toxin %>% 
  ggplot(aes(x = diet, y = neat_conc)) +
  geom_boxplot(aes(group = diet), outlier.shape = NA) +
  geom_jitter(alpha = 0.4, width = 0.1, height = 0)+
  facet_wrap(~neat_toxin) +
  theme_bw(base_size = 14) +
  xlab('Diet') +
  ylab('Concentration') -> neat_plot

neat_plot
```

TcA and TcB concentrations by diet with a 1:10 dilution factor.

```{r}
dil_toxin %>% 
  ggplot(aes(x = diet, y = dil_conc)) +
  geom_boxplot(aes(group = diet), outlier.shape = NA) +
  geom_jitter(alpha = 0.4, width = 0.1, height = 0)+
  facet_wrap(~dil_toxin) +
  theme_bw(base_size = 14) +
  xlab('Diet') +
  ylab('Concentration') -> dil_plot

dil_plot
```

**Saving Plot Outputs**

```{r}
ggsave("neat_toxin.pdf",
       plot = neat_plot,
       width = 6,
       height = 4,
       path = '../plots')

ggsave("dil_toxin.pdf",
       plot = dil_plot,
       width = 6,
       height = 4,
       path = '../plots')
```

**Statistical Analysis**

Linear modeling for neat concentrations of TcA and TcB.

```{r}
neat_toxin %>% 
  group_by(neat_toxin) %>% 
  do(tidy(lm(neat_conc ~ diet, data = .))) -> neat_results

neat_results
```

Linear modeling for 1:10 diluted concentrations of TcA and TcB.

```{r}
dil_toxin %>% 
  group_by(dil_toxin) %>% 
  do(tidy(lm(dil_conc ~ diet, data = .))) -> dil_results

dil_results
```
