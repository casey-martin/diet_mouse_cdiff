---
title: "toxin"
format: html
editor: visual
---

```{r}
# change to scripts directory if not there already
# curr_dir <- getwd()
# curr_dir <- str_split(curr_dir, '\\/')
# if (curr_dir[length(curr_dir)] != 'scripts'){
#   setwd('./scripts')
# }
```

```{r, include=FALSE}
library(broom)
library(cowplot)
library(magrittr)
library(qiime2R)
library(tidyverse)
library(ggpubr)
library(rstatix)
```

```{r}
## general function to prep the metadata file for further data analyses 
metadata_fixer <- function(metadata_fp) {
  tmpMeta <- read_tsv(metadata_fp, n_max = 2)
  mycols <- colnames(tmpMeta)
  metadata <- read_tsv(metadata_fp, skip = 2, col_names = mycols)
  names(metadata)[names(metadata) == '#SampleID'] <- 'sampleid'
  metadata %>% 
    filter(!is.na(diet)) %>% 
    mutate(day_post_inf = if_else(day_post_inf == 2, 3, day_post_inf)) %>% 
    mutate(diet = as.factor(diet)) -> metadata
  return(metadata)
}

## for editing my metadata file post metadata fixer 
meta_diet_fixer <- function(metadata_file,
                            seq_depth_fp){
  seq_depths <- read_tsv(seq_depth_fp)
  metadata_file %>% 
    select(sampleid, diet, day_post_inf, mouse_id, study) %>% 
    mutate(diet_true = diet,
    diet_true = if_else(day_post_inf == -15, "Chow", diet_true),
    high_fat = case_when(
      diet_true == 'HF/HF' ~ 1,
      diet_true == 'HF/LF' ~ 1,
      .default = 0
      ), 
      high_fiber = case_when(
      diet_true == 'HF/HF' ~ 1,
      diet_true == 'LF/HF' ~ 1,
      diet_true == 'Chow' ~ 1,
      .default = 0
      ), 
      purified_diet = case_when(
      diet_true == 'Chow' ~ 0,
      .default = 1
      )
    ) %>% 
    left_join(seq_depths) -> metadata
  return(metadata)
}
```

**File Paths**

```{r}
metadata_FP <- '../data/misc/merged_metadata1.tsv'
toxin_FP <- '../data/misc/toxin_final_data.tsv'
seq_depth_FP <- '../data/misc/tss_seq_depth.tsv'
```

**File Processing**

Do I need to filter for mice that are from day_post_inf 3 like I did for the histopathology since I will be comparing it to the histopathology results??

```{r}
## toxin data 
toxin <- read_tsv(toxin_FP)
wanted_ids <- toxin$mouse_id

## metadata 
metadata <- metadata_fixer(metadata_FP)
metadata <- meta_diet_fixer(metadata,
                            seq_depth_FP)

metadata %>% 
  group_by(mouse_id) %>% 
  filter(mouse_id %in% wanted_ids) -> meta_filt

metadata %>% 
  left_join(toxin, by = 'mouse_id') %>% 
  gather('Total TcA Neat', 'Total TcB Neat', 
         key = neat_toxin, value = neat_conc) %>% 
  gather('Total TcA 1:10', 'Total TcB 1:10',
         key = dil_toxin, value = dil_conc) -> pre_toxin

pre_toxin$neat_conc[pre_toxin$neat_conc == 'BDL'] <- 0
pre_toxin$dil_conc[pre_toxin$dil_conc == 'BDL'] <- 0
pre_toxin$dil_conc[pre_toxin$dil_conc == 'Chow'] <- 0

pre_toxin %>% 
  filter(!is.na(dil_conc),
         !is.na(neat_conc)) %>%
  mutate(neat_conc = as.numeric(neat_conc),
         dil_conc = as.numeric(dil_conc)) -> big_toxin

## attempting to remove duplicated points due to repeating mouse_ids 
## from my subsequent plots 
big_toxin %>% 
  select(-Extra_Sample) %>% 
  distinct(mouse_id, dil_conc, .keep_all = TRUE) -> dil_toxin

big_toxin %>% 
  select(-Extra_Sample) %>% 
  distinct(mouse_id, neat_conc, .keep_all = TRUE) -> neat_toxin 
```

**Stats on my Toxin Data for Ggplot**

Running Kruskal-Wallis and Dunn's Post Hoc test on the toxin data.

```{r}
## neat toxin concentration
big_toxin %>% 
  group_by(neat_toxin) %>% 
  do(tidy(kruskal.test(neat_conc ~ diet,
             data = .))) -> neat_kruskal

big_toxin %>% 
  group_by(neat_toxin) %>% 
  dunn_test(neat_conc ~ diet,
            p.adjust.method = 'bonferroni',
            data = .) %>% 
  add_y_position(scales = 'free_y') -> neat_dunn

## diluted toxin concentration
big_toxin %>% 
  group_by(dil_toxin) %>% 
  do(tidy(kruskal.test(dil_conc ~ diet,
             data = .))) -> dil_kruskal

big_toxin %>% 
  group_by(dil_toxin) %>% 
  dunn_test(dil_conc ~ diet,
            p.adjust.method = 'bonferroni',
            data = .) %>% 
  add_y_position(scales = 'free_y') -> dil_dunn
```

**Toxin Plot Construction**

TcA and TcB concentrations by diet without any kind of dilution factor.

```{r, fig.height=5, fig.width=10}
neat_labs <- c('TcA', 'TcB')
names(neat_labs) <- c('Total TcA Neat', 'Total TcB Neat')

neat_toxin %>% 
  ggplot(aes(x = diet, y = neat_conc)) +
  geom_violin(aes(group = diet)) +
  geom_jitter(alpha = 0.4, width = 0.1, height = 0)+
  scale_x_discrete(labels = c('Chow', 'High Fat/\nHigh Fiber', 'High Fat/\nLow Fiber',
                              'Low Fat/\nHigh Fiber', 'Low Fat/\nLow Fiber')) +
  facet_wrap(~neat_toxin,
             labeller = labeller(neat_toxin = neat_labs), 
             scales = 'free_y') +
  stat_pvalue_manual(neat_dunn,
                     tip.length = 0.01,
                     label = 'p.adj.signif',
                     hide.ns = TRUE) +
  theme_bw(base_size = 14) +
  xlab('Diet') +
  ylab('Concentration') +
  ggtitle('Toxin Neat Concentration by Mouse Diet') -> neat_plot

neat_plot
```

TcA and TcB concentrations by diet with a 1:10 dilution factor.

```{r, fig.height=5, fig.width=10}
dil_labs <- c('TcA', 'TcB')
names(dil_labs) <- c('Total TcA 1:10', 'Total TcB 1:10')


dil_toxin %>% 
  ggplot(aes(x = diet, y = dil_conc)) +
  geom_violin(aes(group = diet)) +
  geom_jitter(alpha = 0.4, width = 0.1, height = 0) +
  scale_x_discrete(labels = c('Chow', 'High Fat/\nHigh Fiber', 'High Fat/\nLow Fiber',
                              'Low Fat/\nHigh Fiber', 'Low Fat/\nLow Fiber')) +
  facet_wrap(~dil_toxin,
             labeller = labeller(dil_toxin = dil_labs),
             scales = 'free_y') +
  stat_pvalue_manual(dil_dunn,
                     tip.length = 0.01,
                     label = 'p.adj.signif',
                     hide.ns = TRUE) +
  theme_bw(base_size = 14) +
  xlab('Diet') +
  ylab('Concentration') +
  ggtitle('Toxin Diluted (1:10) Concentration by Mouse Diet')-> dil_plot

dil_plot
```

**Saving Plot Outputs**

```{r}
ggsave("neat_toxin.pdf",
       plot = neat_plot,
       width = 10,
       height = 5,
       path = '../plots')

ggsave("dil_toxin.pdf",
       plot = dil_plot,
       width = 10,
       height = 5,
       path = '../plots')
```

**Linear Modeling on Toxin Data**

Linear modeling for neat concentrations of TcA and TcB.

```{r}
neat_toxin %>% 
  group_by(neat_toxin) %>% 
  do(tidy(lm(neat_conc ~ diet, data = .))) %>% 
  adjust_pvalue(method = 'bonferroni') -> neat_results

neat_results
```

Linear modeling for 1:10 diluted concentrations of TcA and TcB.

```{r}
dil_toxin %>% 
  group_by(dil_toxin) %>% 
  do(tidy(lm(dil_conc ~ diet, data = .))) %>% 
  adjust_pvalue(method = 'bonferroni') -> dil_results

dil_results
```

**Saving Statistical Outputs**

This includes the outputs from the Kruskal-Wallis and Dunn's Post Hoc tests but not the linear modeling results yet (because I'm not sure which ones to use).

```{r}
write_tsv(neat_kruskal,
          '../stats/neatToxin_kruskal_test.tsv')
write_tsv(neat_dunn,
          '../stats/neatToxin_dunn_test.tsv')
write_tsv(dil_kruskal,
          '../stats/dilToxin_kruskal_test.tsv')
write_tsv(dil_dunn,
          '../stats/dilToxin_dunn_test.tsv')
```
